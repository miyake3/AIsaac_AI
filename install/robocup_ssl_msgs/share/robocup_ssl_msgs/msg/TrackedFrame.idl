// generated from rosidl_adapter/resource/msg.idl.em
// with input from robocup_ssl_msgs/msg/detection_tracked/TrackedFrame.msg
// generated code does not contain a copyright notice

#include "robocup_ssl_msgs/msg/KickedBall.idl"
#include "robocup_ssl_msgs/msg/TrackedBall.idl"
#include "robocup_ssl_msgs/msg/TrackedRobot.idl"

module robocup_ssl_msgs {
  module msg {
    module TrackedFrame_Constants {
      const uint32 CAPABILITY_UNKNOWN = 0;
      const uint32 CAPABILITY_DETECT_FLYING_BALLS = 1;
      const uint32 CAPABILITY_DETECT_MULTIPLE_BALLS = 2;
      const uint32 CAPABILITY_DETECT_KICKED_BALLS = 3;
    };
    @verbatim (language="comment", text=
      " This msg file is a copy of 'messages_robocup_ssl_detection_tracked.proto'" "\n"
      " https://github.com/RoboCup-SSL/ssl-vision/blob/master/src/shared/proto/messages_robocup_ssl_detection_tracked.proto")
    struct TrackedFrame {
      @verbatim (language="comment", text=
        " A monotonous increasing frame counter")
      uint32 frame_number;

      @verbatim (language="comment", text=
        " The unix timestamp in of the data")
      @unit (value="s")
      double timestamp;

      @verbatim (language="comment", text=
        " The list of detected balls" "\n"
        " The first ball is the primary one" "\n"
        " Sources may add additional balls based on their capabilities")
      sequence<robocup_ssl_msgs::msg::TrackedBall> balls;

      @verbatim (language="comment", text=
        " The list of detected robots of both teams")
      sequence<robocup_ssl_msgs::msg::TrackedRobot> robots;

      @verbatim (language="comment", text=
        " Information about a kicked ball, if the ball was kicked by a robot and is still moving" "\n"
        " Note: This field is optional. Some source implementations might not set this at any time" "\n"
        " optional")
      sequence<robocup_ssl_msgs::msg::KickedBall, 1> kicked_ball;

      @verbatim (language="comment", text=
        " List of capabilities of the source implementation")
      sequence<uint32> capabilities;
    };
  };
};
