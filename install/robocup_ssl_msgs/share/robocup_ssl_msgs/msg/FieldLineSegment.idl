// generated from rosidl_adapter/resource/msg.idl.em
// with input from robocup_ssl_msgs/msg/geometry/FieldLineSegment.msg
// generated code does not contain a copyright notice

#include "robocup_ssl_msgs/msg/Vector2f.idl"

module robocup_ssl_msgs {
  module msg {
    module FieldLineSegment_Constants {
      const uint32 UNDEFINED = 0;
      const uint32 CENTER_CIRCLE = 1;
      const uint32 TOP_TOUCH_LINE = 2;
      const uint32 BOTTOM_TOUCH_LINE = 3;
      const uint32 LEFT_GOAL_LINE = 4;
      const uint32 RIGHT_GOAL_LINE = 5;
      const uint32 HALFWAY_LINE = 6;
      const uint32 CENTER_LINE = 7;
      const uint32 LEFT_PENALTY_STRETCH = 8;
      const uint32 RIGHT_PENALTY_STRETCH = 9;
      const uint32 LEFT_FIELD_LEFT_PENALTY_STRETCH = 10;
      const uint32 LEFT_FIELD_RIGHT_PENALTY_STRETCH = 11;
      const uint32 RIGHT_FIELD_LEFT_PENALTY_STRETCH = 12;
      const uint32 RIGHT_FIELD_RIGHT_PENALTY_STRETCH = 13;
    };
    @verbatim (language="comment", text=
      " This msg file is a copy of 'messages_robocup_ssl_geometry.proto'" "\n"
      " https://github.com/RoboCup-SSL/ssl-vision/blob/master/src/shared/proto/messages_robocup_ssl_geometry.proto")
    struct FieldLineSegment {
      @verbatim (language="comment", text=
        " Represents a field marking as a line segment represented by a start point p1," "\n"
        " and end point p2, and a line thickness. The start and end points are along" "\n"
        " the center of the line, so the thickness of the line extends by thickness / 2" "\n"
        " on either side of the line.")
      string name;

      robocup_ssl_msgs::msg::Vector2f p1;

      robocup_ssl_msgs::msg::Vector2f p2;

      float thickness;

      @verbatim (language="comment", text=
        " optional")
      sequence<uint32, 1> type;
    };
  };
};
