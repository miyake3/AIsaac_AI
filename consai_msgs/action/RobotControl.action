# 制御を停止する場合はstopをtrue
# actionは瞬時に完了する
bool stop false
# 目標値に到達しても制御を続けてほしいときはtrue
# actionは瞬時に完了する
bool keep_control false

# XY方向の最大速度m/s を制限する
# STOPゲーム中は走行速度を抑えなくてはならない
float64[<=1] max_velocity_xy

# 移動の目標値
State2D object  #目標値のx,y,theta座標を格納する。正規化しない
ConstraintPose[<=1] pose
ConstraintLine[<=1] line

# ボール操作関連のフラグ
int32 kick_power    #m/sでボールをける(現在はキック力を5段階に分けて使用,0 = 0m/s, 1 = 1.2m/s, 2 = 2.4m/s, 3 = 3.6m/s, 4 = 4.8m/s, 5 = 6.0m/s)
# kick_enable = trueでボールを蹴る
bool kick_enable false
# kick_pass = falseで最大速度でボールを蹴る
# kick_pass = trueで低速度でボールを蹴る
bool kick_pass false
# kick_setplay = true でセットプレイ用の落ち着いたキックを実行する
bool kick_setplay false
# キックの目標地点
ConstraintXY kick_target

# dribble_enable = trueで、dribble_targetに向かってボールを運ぶ
bool dribble_enable false
ConstraintXY dribble_target

# 転がっているボールを受け取るときはtrue
bool receive_ball false

# リフレクトシュート(ボールセンサに反応したらキック)
bool reflect_shoot false

# 衝突回避は安全のためデフォルトでtrue
bool avoid_obstacles true
bool avoid_placement true

---
bool success
string message
---
State2D remaining_pose
State2D present_velocity 